---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import type { Author } from '~/types';

export interface Props {
  author: Author | string;
  class?: string;
}

const { author, class: className = '' } = Astro.props;

// Since we only display the card for object authors now, simplify the logic
// but keep string support for backward compatibility
const authorName = typeof author === 'string' ? author : author.name;
const authorPhoto = typeof author === 'string' ? undefined : author.photo;
const socialLinks =
  typeof author === 'string'
    ? []
    : [
        { platform: 'linkedin', url: author.linkedin, icon: 'tabler:brand-linkedin' },
        { platform: 'twitter', url: author.twitter, icon: 'tabler:brand-twitter' },
        { platform: 'github', url: author.github, icon: 'tabler:brand-github' },
      ].filter((link) => link.url);

const hasSocialLinks = socialLinks.length > 0;
const hasAuthorDetails = typeof author !== 'string' && (authorPhoto || hasSocialLinks);

// Check if the photo is a URL (starts with http, https, or //)
const isPhotoUrl =
  authorPhoto &&
  (authorPhoto.startsWith('http://') || authorPhoto.startsWith('https://') || authorPhoto.startsWith('//'));
---

{
  hasAuthorDetails && (
    <div class={`flex items-center gap-4 ${className}`}>
      <div class="flex-shrink-0 h-12 flex items-center">
        <div class="w-1 h-8 bg-gradient-to-b from-primary to-primary-900 rounded-full mr-3" />
      </div>
      {authorPhoto && (
        <div class="flex-shrink-0">
          {isPhotoUrl ? (
            <img
              src={authorPhoto}
              alt={`Photo of ${authorName}`}
              class="w-12 h-12 rounded-full object-cover border-2 border-gray-100 dark:border-gray-800 shadow-sm"
              width="48"
              height="48"
            />
          ) : (
            <Image
              src={authorPhoto}
              alt={`Photo of ${authorName}`}
              class="w-12 h-12 rounded-full object-cover border-2 border-gray-100 dark:border-gray-800 shadow-sm"
              width={48}
              height={48}
            />
          )}
        </div>
      )}
      <div>
        <div class="font-semibold text-gray-800 dark:text-gray-200">{authorName}</div>
        {hasSocialLinks && (
          <div class="flex mt-1 space-x-2">
            {socialLinks.map((link) => (
              <a
                href={link.url}
                target="_blank"
                rel="noopener noreferrer"
                class="text-gray-500 hover:text-primary dark:text-gray-400 dark:hover:text-blue-400"
                title={`${authorName} on ${link.platform}`}
              >
                <Icon name={link.icon} class="w-4 h-4" />
              </a>
            ))}
          </div>
        )}
      </div>
    </div>
  )
}
